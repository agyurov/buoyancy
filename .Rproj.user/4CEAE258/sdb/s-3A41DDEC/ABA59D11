{
    "collab_server" : "",
    "contents" : "# draft\n# source(\"../Rfunctions/Rfunctions.R\")\n\nlibrary(ggplot2)\nlibrary(deldir)\ndf = data.frame(v1 = runif(100, 0, 2),\n                v2 = runif(100, 0, 3))\n\n\n# Working examples --------------------------------------------------------\n\n# df = iris[,1:3]\n# resp = iris$Species\n\n# df0 = as.data.frame(msleep)\n# df0 = na.omit(df0)\n# df = df0[,c(6:11)]\n# resp = do.call(cbind.data.frame, lapply(df0[,1:5], factor))\n\ndf = ToothGrowth[,c(1,3)]\nresp = ToothGrowth$supp\n\nnsteps = 2\nNgroups = length(unique(resp))\n\n# functions ---------------------------------------------------------------\n\nmy.dist = function(x,y){\n  return(sqrt(sum((x-y)^2)))\n}\n\nrec.grid = function(a,x){\n  # a is list of ranges for each variable\n  out = seq(a[1], a[length(a)], len = 2^x + 1)\n  return(out)\n}\n\nin.interval = function(x, y){\n  # x data, y = interval\n  # return(cbind(x, findInterval(x, y)))\n  return(findInterval(x, y, rightmost.closed = T))\n}\n\n# algorithm ---------------------------------------------------------------\n\n\na = lapply(df, range)\ncond = T\ni = 0\nresults = result = cm = fake = gridz = list()\nnewdf = df\n\nfor(i in 1:nsteps){\n  # i = i + 1\n  \n  # grid\n  a = lapply(a, rec.grid, x = i)\n  \n  # count\n  for(j in 1:ncol(df)){\n    fake[[j]] = in.interval(df[,j], a[[j]])\n  }\n  gridz[[i]] = do.call(paste0, fake)\n  names(gridz)[i] = paste0('g', 2^i)\n  newdf = cbind(df, do.call(paste0, fake))\n  names(newdf)[ncol(newdf)] = 'grp'\n  cm[[i]] = aggregate(.~grp, newdf, mean)\n  \n  # plot\n  # plot(df[,1], df[,2], pch = 20, col = gridz[[i]])\n  # abline(v = a[[1]], lty = 2, col = 'grey')\n  # abline(h = a[[2]], lty = 2, col = 'grey')\n  # points(cm[[i]][,2], cm[[i]][,3], pch = 4, lwd = 2, cex = 2)\n  \n  # evaluate condition\n  \n  # readline('fesfes')\n}\n\nmass = lapply(gridz, table)\nfinaldf = cbind(df, do.call(cbind.data.frame, gridz))\n\n\nfor(i in 1:nsteps){\n  results[[i]] = cbind(mass[[i]], cm[[i]])\n}\n\nresult = results[[nsteps]]\n\n\n# exploration -------------------------------------------------------------\n\ngroups = result[result$Freq %in% sort(result$Freq, decreasing = T)[1:Ngroups],]\ngroups\n\n# predict -----------------------------------------------------------------\n\ng = list()\nfor(i in 1:Ngroups){\n  cat(paste0('Run ', i, ' of ', Ngroups, '\\n'))\n  g[[i]] = apply(df, 1, my.dist, y = groups[i,4:(4+ncol(df)- 1)])\n}\nnames(g) = paste0('g', 1:length(g))\n\nprd = do.call(cbind.data.frame, g)\n\nprdctn = apply(prd, 1, which.min)\n\ncat('\\014')\nif(is.data.frame(resp)){\n  for(i in 1:ncol(resp)){\n    print(table(prdctn, resp[,i]))\n  }\n}\nif(!is.data.frame(resp)){\n  table(prdctn, resp)\n}\n",
    "created" : 1501954101023.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "27|24|29|0|\n31|25|35|0|\n37|29|41|0|\n52|19|77|0|\n83|19|85|0|\n98|20|101|0|\n",
    "hash" : "3663312323",
    "id" : "ABA59D11",
    "lastKnownWriteTime" : 1501956656,
    "last_content_update" : 1501956656526,
    "path" : "C:/Users/Lenovo/Google Drive/Projects_personal/buoyancy/draft.R",
    "project_path" : "draft.R",
    "properties" : {
        "docOutlineVisible" : "0",
        "source_window_id" : "",
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}